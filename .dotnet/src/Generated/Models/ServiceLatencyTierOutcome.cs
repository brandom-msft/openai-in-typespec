// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace OpenAI
{
    public readonly partial struct ServiceLatencyTierOutcome : IEquatable<ServiceLatencyTierOutcome>
    {
        private readonly string _value;

        public ServiceLatencyTierOutcome(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string ScaleCreditsAppliedValue = "scale";
        private const string DefaultValue = "default";
        public static ServiceLatencyTierOutcome Default { get; } = new ServiceLatencyTierOutcome(DefaultValue);
        public static bool operator ==(ServiceLatencyTierOutcome left, ServiceLatencyTierOutcome right) => left.Equals(right);
        public static bool operator !=(ServiceLatencyTierOutcome left, ServiceLatencyTierOutcome right) => !left.Equals(right);
        public static implicit operator ServiceLatencyTierOutcome(string value) => new ServiceLatencyTierOutcome(value);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ServiceLatencyTierOutcome other && Equals(other);
        public bool Equals(ServiceLatencyTierOutcome other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        public override string ToString() => _value;
    }
}

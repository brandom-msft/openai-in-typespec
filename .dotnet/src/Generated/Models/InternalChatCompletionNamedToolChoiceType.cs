// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace OpenAI.Chat
{
    /// <summary> The ChatCompletionNamedToolChoice_type. </summary>
    internal readonly partial struct InternalChatCompletionNamedToolChoiceType : IEquatable<InternalChatCompletionNamedToolChoiceType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="InternalChatCompletionNamedToolChoiceType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public InternalChatCompletionNamedToolChoiceType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string FunctionValue = "function";

        /// <summary> function. </summary>
        public static InternalChatCompletionNamedToolChoiceType Function { get; } = new InternalChatCompletionNamedToolChoiceType(FunctionValue);
        /// <summary> Determines if two <see cref="InternalChatCompletionNamedToolChoiceType"/> values are the same. </summary>
        public static bool operator ==(InternalChatCompletionNamedToolChoiceType left, InternalChatCompletionNamedToolChoiceType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="InternalChatCompletionNamedToolChoiceType"/> values are not the same. </summary>
        public static bool operator !=(InternalChatCompletionNamedToolChoiceType left, InternalChatCompletionNamedToolChoiceType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="InternalChatCompletionNamedToolChoiceType"/>. </summary>
        public static implicit operator InternalChatCompletionNamedToolChoiceType(string value) => new InternalChatCompletionNamedToolChoiceType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is InternalChatCompletionNamedToolChoiceType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(InternalChatCompletionNamedToolChoiceType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}

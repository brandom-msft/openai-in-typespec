// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace OpenAI.Files
{
    internal partial class InternalUploadJob
    {
        internal IDictionary<string, BinaryData> _serializedAdditionalRawData;

        internal InternalUploadJob(string id, DateTimeOffset createdAt, string filename, int bytes, string purpose, InternalUploadJobStatus status, DateTimeOffset expiresAt)
        {
            Argument.AssertNotNull(id, nameof(id));
            Argument.AssertNotNull(filename, nameof(filename));
            Argument.AssertNotNull(purpose, nameof(purpose));

            Id = id;
            CreatedAt = createdAt;
            Filename = filename;
            Bytes = bytes;
            Purpose = purpose;
            Status = status;
            ExpiresAt = expiresAt;
        }

        internal InternalUploadJob(string id, DateTimeOffset createdAt, string filename, int bytes, string purpose, InternalUploadJobStatus status, DateTimeOffset expiresAt, object internalObject, OpenAIFileInfo file, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Id = id;
            CreatedAt = createdAt;
            Filename = filename;
            Bytes = bytes;
            Purpose = purpose;
            Status = status;
            ExpiresAt = expiresAt;
            _internalObject = internalObject;
            File = file;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        internal InternalUploadJob()
        {
        }

        public string Id { get; }
        public DateTimeOffset CreatedAt { get; }
        public string Filename { get; }
        public int Bytes { get; }
        public string Purpose { get; }
        public InternalUploadJobStatus Status { get; }
        public DateTimeOffset ExpiresAt { get; }
        public OpenAIFileInfo File { get; }
    }
}

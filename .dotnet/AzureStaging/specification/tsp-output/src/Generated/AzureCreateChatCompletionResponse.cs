// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.OpenAI
{
    /// <summary> The AzureCreateChatCompletionResponse. </summary>
    public partial class AzureCreateChatCompletionResponse : CreateChatCompletionResponse
    {
        /// <summary> Initializes a new instance of <see cref="AzureCreateChatCompletionResponse"/>. </summary>
        /// <param name="id"> A unique identifier for the chat completion. </param>
        /// <param name="choices"> A list of chat completion choices. Can be more than one if `n` is greater than 1. </param>
        /// <param name="created"> The Unix timestamp (in seconds) of when the chat completion was created. </param>
        /// <param name="model"> The model used for the chat completion. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/>, <paramref name="choices"/> or <paramref name="model"/> is null. </exception>
        internal AzureCreateChatCompletionResponse(string id, IEnumerable<CreateChatCompletionResponseChoice> choices, DateTimeOffset created, string model) : base(id, choices, created, model)
        {
            Argument.AssertNotNull(id, nameof(id));
            Argument.AssertNotNull(choices, nameof(choices));
            Argument.AssertNotNull(model, nameof(model));

            PromptFilterResults = new ChangeTrackingList<AzureCreateChatCompletionResponsePromptFilterResult>();
        }

        /// <summary> Initializes a new instance of <see cref="AzureCreateChatCompletionResponse"/>. </summary>
        /// <param name="id"> A unique identifier for the chat completion. </param>
        /// <param name="choices"> A list of chat completion choices. Can be more than one if `n` is greater than 1. </param>
        /// <param name="created"> The Unix timestamp (in seconds) of when the chat completion was created. </param>
        /// <param name="model"> The model used for the chat completion. </param>
        /// <param name="systemFingerprint">
        /// This fingerprint represents the backend configuration that the model runs with.
        ///
        /// Can be used in conjunction with the `seed` request parameter to understand when backend changes have been made that might impact determinism.
        /// </param>
        /// <param name="object"> The object type, which is always `chat.completion`. </param>
        /// <param name="usage"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="promptFilterResults"></param>
        internal AzureCreateChatCompletionResponse(string id, IReadOnlyList<CreateChatCompletionResponseChoice> choices, DateTimeOffset created, string model, string systemFingerprint, string @object, CompletionUsage usage, IDictionary<string, BinaryData> serializedAdditionalRawData, IReadOnlyList<AzureCreateChatCompletionResponsePromptFilterResult> promptFilterResults) : base(id, choices, created, model, systemFingerprint, @object, usage, serializedAdditionalRawData)
        {
            PromptFilterResults = promptFilterResults;
        }

        /// <summary> Initializes a new instance of <see cref="AzureCreateChatCompletionResponse"/> for deserialization. </summary>
        internal AzureCreateChatCompletionResponse()
        {
        }

        /// <summary> Gets the prompt filter results. </summary>
        public IReadOnlyList<AzureCreateChatCompletionResponsePromptFilterResult> PromptFilterResults { get; }
    }
}

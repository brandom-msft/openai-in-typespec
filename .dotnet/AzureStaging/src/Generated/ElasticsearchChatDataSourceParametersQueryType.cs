// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.AI.OpenAI.Chat
{
    /// <summary> Enum for query_type in ElasticsearchChatDataSourceParameters. </summary>
    public readonly partial struct ElasticsearchChatDataSourceParametersQueryType : IEquatable<ElasticsearchChatDataSourceParametersQueryType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ElasticsearchChatDataSourceParametersQueryType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ElasticsearchChatDataSourceParametersQueryType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string SimpleValue = "simple";
        private const string VectorValue = "vector";

        /// <summary> simple. </summary>
        public static ElasticsearchChatDataSourceParametersQueryType Simple { get; } = new ElasticsearchChatDataSourceParametersQueryType(SimpleValue);
        /// <summary> vector. </summary>
        public static ElasticsearchChatDataSourceParametersQueryType Vector { get; } = new ElasticsearchChatDataSourceParametersQueryType(VectorValue);
        /// <summary> Determines if two <see cref="ElasticsearchChatDataSourceParametersQueryType"/> values are the same. </summary>
        public static bool operator ==(ElasticsearchChatDataSourceParametersQueryType left, ElasticsearchChatDataSourceParametersQueryType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ElasticsearchChatDataSourceParametersQueryType"/> values are not the same. </summary>
        public static bool operator !=(ElasticsearchChatDataSourceParametersQueryType left, ElasticsearchChatDataSourceParametersQueryType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="ElasticsearchChatDataSourceParametersQueryType"/>. </summary>
        public static implicit operator ElasticsearchChatDataSourceParametersQueryType(string value) => new ElasticsearchChatDataSourceParametersQueryType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ElasticsearchChatDataSourceParametersQueryType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ElasticsearchChatDataSourceParametersQueryType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}

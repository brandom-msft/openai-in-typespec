// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;
using OpenAI;
using OpenAI.Chat;

namespace Azure.AI.OpenAI
{
    /// <summary> The AzureOpenAIChatErrorInnerError_code. </summary>
    public readonly partial struct AzureOpenAIChatErrorInnerErrorCode : IEquatable<AzureOpenAIChatErrorInnerErrorCode>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="AzureOpenAIChatErrorInnerErrorCode"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public AzureOpenAIChatErrorInnerErrorCode(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string ResponsibleAIPolicyViolationValue = "ResponsibleAIPolicyViolation";

        /// <summary> ResponsibleAIPolicyViolation. </summary>
        public static AzureOpenAIChatErrorInnerErrorCode ResponsibleAIPolicyViolation { get; } = new AzureOpenAIChatErrorInnerErrorCode(ResponsibleAIPolicyViolationValue);
        /// <summary> Determines if two <see cref="AzureOpenAIChatErrorInnerErrorCode"/> values are the same. </summary>
        public static bool operator ==(AzureOpenAIChatErrorInnerErrorCode left, AzureOpenAIChatErrorInnerErrorCode right) => left.Equals(right);
        /// <summary> Determines if two <see cref="AzureOpenAIChatErrorInnerErrorCode"/> values are not the same. </summary>
        public static bool operator !=(AzureOpenAIChatErrorInnerErrorCode left, AzureOpenAIChatErrorInnerErrorCode right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="AzureOpenAIChatErrorInnerErrorCode"/>. </summary>
        public static implicit operator AzureOpenAIChatErrorInnerErrorCode(string value) => new AzureOpenAIChatErrorInnerErrorCode(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is AzureOpenAIChatErrorInnerErrorCode other && Equals(other);
        /// <inheritdoc />
        public bool Equals(AzureOpenAIChatErrorInnerErrorCode other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}

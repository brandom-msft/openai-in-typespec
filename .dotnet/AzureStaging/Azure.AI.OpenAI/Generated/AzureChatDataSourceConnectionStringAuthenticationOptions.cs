// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using OpenAI;
using OpenAI.Chat;

namespace Azure.AI.OpenAI
{
    /// <summary> The AzureChatDataSourceConnectionStringAuthenticationOptions. </summary>
    public partial class AzureChatDataSourceConnectionStringAuthenticationOptions : AzureChatDataSourceAuthenticationOptions
    {
        /// <summary> Initializes a new instance of <see cref="AzureChatDataSourceConnectionStringAuthenticationOptions"/>. </summary>
        /// <param name="connectionString"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="connectionString"/> is null. </exception>
        internal AzureChatDataSourceConnectionStringAuthenticationOptions(string connectionString)
        {
            Argument.AssertNotNull(connectionString, nameof(connectionString));

            Type = "connection_string";
            ConnectionString = connectionString;
        }

        /// <summary> Initializes a new instance of <see cref="AzureChatDataSourceConnectionStringAuthenticationOptions"/>. </summary>
        /// <param name="type"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="connectionString"></param>
        internal AzureChatDataSourceConnectionStringAuthenticationOptions(string type, IDictionary<string, BinaryData> serializedAdditionalRawData, string connectionString) : base(type, serializedAdditionalRawData)
        {
            ConnectionString = connectionString;
        }

        /// <summary> Initializes a new instance of <see cref="AzureChatDataSourceConnectionStringAuthenticationOptions"/> for deserialization. </summary>
        internal AzureChatDataSourceConnectionStringAuthenticationOptions()
        {
        }

        /// <summary> Gets the connection string. </summary>
        public string ConnectionString { get; }
    }
}
